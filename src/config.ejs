/**
* 自动生成pinia入口文件
*/
import { ToRef } from 'vue';
<%- importPath %>

<%- storeMap %> 
type AutoToRefs<T> = {
  [K in keyof T]: T[K] extends Function ? T[K] : ToRef<T[K]>
}
export function $useStore<T extends keyof typeof storeMap>(storeName: T) {
  const store = storeMap[storeName]()
  const storeRefs = storeToRefs(store)
  /**
   * ReturnType 获取函数类型，返回类型
   * ToRefs<ReturnType<typeof storeMap[T]>> 加上调用提示
   */
  // return {...store,...storeRefs }  as ToRefs<ReturnType<typeof storeMap[T]>>
    return { ...store, ...storeRefs } as unknown as AutoToRefs<ReturnType<typeof storeMap[T]>>
}